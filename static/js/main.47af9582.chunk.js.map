{"version":3,"sources":["components/Expense/ExpenseDate.js","components/UI/Card.js","components/Expense/ExpenseItem.js","components/Expense/ExpensesList.js","components/Expense/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expense/ExpensesChart.js","components/Expense/ExpenseDetails.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","days","getDate","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","item","length","map","expenses","id","ExpensesFilter","value","selectedYear","onChange","event","onYearChange","target","ChartBar","barFilledHeight","maxValue","Math","round","console","log","style","height","label","Chart","filteredMaxValue","dataPoints","dataPoint","maxVal","max","expense","ExpensesChart","chartDataPoints","getMonth","ExpenseDetails","useState","years","setYear","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onExpenseAdd","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","random","onExpenseHandeller","DUMMY_EXP","App","setExpenses","prevExp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47af9582.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const days = props.date.getDate();\r\n    const year = props.date.getFullYear();\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n            <div className='expense-date__day'>{days}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default ExpenseDate;","import './Card.css';\r\nconst Card = (props) => {\r\n    let classes = 'card ' + props.className\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nfunction ExpenseItem(props) {\r\n    return (\r\n        <Card className='expense-item'>\r\n            <ExpenseDate date={props.date} />\r\n\r\n            <div className='expense-item__description'><h2>{props.title}</h2></div>\r\n            <div className='expense-item__price'>{props.amount}</div>\r\n        </Card>)\r\n}\r\n\r\nexport default ExpenseItem;","import React from \"react\";\r\nimport './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = (props) => {\r\n    if (props.item.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">No Expense Added.</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {\r\n                props.item.map(expenses => <ExpenseItem key={expenses.id}\r\n                    title={expenses.title} date={expenses.date} amount={expenses.amount} />)\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n//import { useState } from 'react';\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const yearChangeHandeller = (event) => {\r\n    props.onYearChange(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selectedYear} onChange={yearChangeHandeller}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from \"react\";\r\nimport './ChartBar.css'\r\n\r\nconst ChartBar = (props) => {\r\n    let barFilledHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFilledHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n    console.log(barFilledHeight);\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{ height: barFilledHeight }}>\r\n                </div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n    const filteredMaxValue = props.dataPoints.map((dataPoint) => { return dataPoint.value });\r\n    const maxVal = Math.max(...filteredMaxValue);\r\n    return (\r\n        <div className=\"chart\">\r\n            {\r\n                props.dataPoints.map(expense => <ChartBar key={expense.label} maxValue={maxVal} label={expense.label} value={expense.value} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Chart;","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },\r\n    ];\r\n    for (let expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        //console.log(expenseMonth);\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    //console.log(chartDataPoints);\r\n\r\n    return (\r\n        <Chart dataPoints={chartDataPoints} />\r\n    )\r\n}\r\n\r\nexport default ExpensesChart;","import ExpensesList from './ExpensesList';\r\nimport './Expenses.css';\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport { useState } from \"react\";\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst ExpenseDetails = (props) => {\r\n    //const currArr = []\r\n    const [years, setYear] = useState('2020');\r\n    const addNewYear = (years) => {\r\n        setYear(years);\r\n    }\r\n\r\n    /* for (let yr of props.item) {\r\n         let newDate = new Date(yr.date);\r\n         let year = newDate.getFullYear();\r\n         if (year == years) {\r\n             currArr.push(yr);\r\n         }\r\n     }*/\r\n\r\n    const filteredExpenses = props.item.filter((expenses) => {\r\n        return expenses.date.getFullYear().toString() === years;\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <li>\r\n                <Card className=\"expenses\">\r\n                    <ExpensesChart expenses={filteredExpenses} />\r\n                    <ExpensesFilter selectedYear={years} onYearChange={addNewYear} />\r\n\r\n                    <ExpensesList item={filteredExpenses} />\r\n                </Card>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDetails;","import React from \"react\";\r\nimport './ExpenseForm.css';\r\nimport { useState } from 'react';\r\n//import ExpenseItem from \"../Expense/ExpenseItem\";\r\n//import ExpenseDate from \"../Expense/ExpenseDate\";\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    /*const [input, setInput] = useState({\r\n        enteredTitle: '',\r\n        enteredAmount: '',\r\n        enteredDate: ''\r\n    })\r\n    */\r\n\r\n\r\n    const titleChangeHandeller = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        /**\r\n         * setInput((prevInput)=>{\r\n         * return {...prevInput, enteredTitle: event.target.value}\r\n         * })\r\n         */\r\n        /**\r\n         * setInput(\r\n         * ...prevInput, \r\n         * enteredTitle: event.target.value\r\n         * )\r\n         */\r\n    }\r\n\r\n    const amountChangeHandeller = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n\r\n    const dateChangeHandeller = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n    const submitHandeller = (event) => {\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n        props.onExpenseAdd(expenseData);\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n        setEnteredTitle('');\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandeller} >\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandeller} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type='number' min='0.01' step='0.01' value={enteredAmount} onChange={amountChangeHandeller} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type='date' min='2019-01-01' max='2022-12-31' value={enteredDate} onChange={dateChangeHandeller} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel} >Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm;","import React, { useState } from \"react\";\r\nimport './NewExpense.css';\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const newExpenseData = (expense) => {\r\n        const expenses = {\r\n            ...expense,\r\n            id: Math.random().toString()\r\n        }\r\n        props.onExpenseHandeller(expenses);\r\n        setIsEditing(false);\r\n    }\r\n    const isEditingHandeller = () => {\r\n        setIsEditing(true);\r\n    }\r\n    const cancelEditing = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!isEditing && <button onClick={isEditingHandeller}>Add New Expense</button>}\r\n            {isEditing && <ExpenseForm onExpenseAdd={newExpenseData} onCancel={cancelEditing} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense;","import React, { useState } from \"react\";\nimport ExpenseDetails from \"./components/Expense/ExpenseDetails\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXP = [\n  {\n    id: 'e1',\n    title: 'Car Insurance',\n    date: new Date(2021, 10, 28),\n    amount: 8000.00\n  },\n  {\n    id: 'e2',\n    title: 'Grocery',\n    date: new Date(2021, 10, 25),\n    amount: 4000.00\n  },\n  {\n    id: 'e3',\n    title: 'Books',\n    date: new Date(2021, 8, 15),\n    amount: 525.00\n  },\n  {\n    id: 'e4',\n    title: 'Online Shopping',\n    date: new Date(2021, 5, 20),\n    amount: 4069.00\n  },\n];\n\nfunction App() {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXP);\n\n  /*return React.createElement('div', {},\n    React.createElement('h2', {}, \"Let's get Started\"),\n    React.createElement(ExpenseDetails, { items: expense })\n  );*/\n\n  const extractData = (expense) => {\n    setExpenses((prevExp) => {\n      return [expense, ...prevExp]\n    })\n  }\n  return (\n    <div>\n      <NewExpense onExpenseHandeller={extractData} />\n      <ExpenseDetails item={expenses} />\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}